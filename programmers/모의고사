import java.util.*;
class Solution {
    public int[] solution(int[] answers) {
        int[] answer = new int[1];
        int[] way1 = {1, 2, 3, 4, 5};
        int[] way2 = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] way3 = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};

        Map<Integer, Integer> summap = new HashMap<>();
        summap.put(1,0);
        summap.put(2,0);
        summap.put(3,0);

        for(int i=0 ; i<answers.length ; i++){
            if(answers[i] == way1[i % 5]){
                summap.put(1, summap.get(1) + 1);
            }
            if(answers[i] == way2[i % 8]){
                summap.put(2, summap.get(2) + 1);
            }
            if(answers[i] == way3[i % 10]){
                summap.put(3, summap.get(3) + 1);
            }
        }

        List<Integer> keys = new ArrayList<>(summap.keySet());
        Collections.sort(keys, (o1, o2) -> (summap.get(o2).compareTo(summap.get(o1)))); 

        if(summap.get(keys.get(0)).equals(summap.get(keys.get(2)))){
            answer = new int[] {1,2,3};
        }else if(summap.get(keys.get(0)).equals(summap.get(keys.get(1)))){
            answer = new int[] {Math.min(keys.get(0),keys.get(1)), Math.max(keys.get(0),keys.get(1))};
        }else{
            answer = new int[] {keys.get(0)};
        }

        return answer;
    }
}
