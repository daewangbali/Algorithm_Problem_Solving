import java.util.*;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        List<Stack> boardList = new ArrayList<>();
        for(int i=0 ; i<board.length ; i++){
            boardList.add(new Stack<Integer>());
        }
        
        for(int i=board.length-1 ; i>=0 ; i--){
            for(int j=0 ; j<board.length ; j++){
                if(board[i][j] == 0) continue;
                boardList.get(j).push(board[i][j]);
            }
        }
        
        Stack<Integer> bagooni = new Stack<>();
        int bagooniTop = 0;
        for(int i=0 ; i<moves.length ; i++){
            if(boardList.get(moves[i]-1).isEmpty()) 
                continue;
            int doll = (int)boardList.get(moves[i]-1).pop();
            if(bagooni.size() == 0){
                bagooni.push(doll);
                continue;
            }else{
                bagooniTop = bagooni.peek();
            }
            
            if(bagooniTop != doll){
                bagooni.push(doll);
            }else{
                answer += 2;
                bagooni.pop();
            }
        }
        
        return answer;
    }
}
